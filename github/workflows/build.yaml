name: Build geosite files
on:
  workflow_dispatch:
  schedule:
    - cron: "20 23 * * *"
  push:
    branches:
      - main

env: 
  TZ: Asia/Hong_Kong

concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Workflow runs delete
        uses: InfraWay/delete-workflow-runs@v2.1.2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 3

      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout hidden branch
        uses: actions/checkout@v4
        with:
          ref: hidden
          path: custom

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version-file: ./go.mod

      - name: Get data directory
        run: |
          git clone https://github.com/v2fly/domain-list-community code
          mv code/data ./
          rm -rf code
        shell: bash

      - name: Custom modification
        run: |
          curl -sSL "https://github.com/crazy-max/WindowsSpyBlocker/raw/master/data/hosts/update.txt" | grep "0.0.0.0" | awk '{print $2}' > ./data/win-update
          sed -i '/include:tld-!cn/d' ./data/geolocation-!cn
          mv ./custom/nivodtv.txt ./data/nivodtv
          echo "include:nivodtv" >> ./data/geolocation-!cn
          cat ./custom/custom_direct.txt >> ./data/geolocation-cn
        shell: bash

      - name: Build dat file
        run: |
          mkdir -p publish
          go run ./ --outputdir=./publish/

      - name: Checkout Geo Repo
        uses: actions/checkout@v4
        with:
          repository: d2184/geo
          path: geo

      - name: Converter to db file
        run: |
          cd geo && go install -trimpath -ldflags="-s -w -buildid=" ./cmd/geo && cd ..
          geo convert site -i v2ray -o sing -f ./publish/geosite.db ./publish/geosite.dat

      - name: Git push files to "release" branch
        if: success()
        run: |
          cd publish || exit 1
          git init --initial-branch=release
          git config --local user.name "${{ github.actor }}"
          git config --local user.email "${{ github.actor }}@users.noreply.github.com"
          git add -A
          git commit -m "Last Updated $(date '+%Y-%m-%d %H:%M:%S')"
          git remote add geosite "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u geosite release
